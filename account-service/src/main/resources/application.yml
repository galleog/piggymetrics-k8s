spring:
  r2dbc:
    url: r2dbc:pool:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:piggymetrics}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:secret}

  jmx:
    enabled: false

  sql:
    init:
      mode: never

  jooq:
    schema: ${DATABASE_SCHEMA:account_service}
    sql-dialect: postgres

  liquibase:
    default-schema: ${DATABASE_SCHEMA:account_service}
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:piggymetrics}
    user: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:secret}

  cloud:
    function:
      definition: userRegisteredEventConsumer;accountUpdatedEventSupplier

    stream:
      bindings:
        userRegisteredEventConsumer-in-0:
          destination: ${USER_EVENTS_TOPIC:user-events}
          content-type: application/x-protobuf
        accountUpdatedEventSupplier-out-0:
          destination: ${ACCOUNT_EVENTS_TOPIC:account-events}
          content-type: application/x-protobuf

      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:localhost:9092}
          required-acks: -1
          producer-properties:
            'enable.idempotence': true
            retries: 5

grpc:
  server:
    port: 9090