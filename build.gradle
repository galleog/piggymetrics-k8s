import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    dependencies {
        classpath 'org.testcontainers:postgresql:1.17.3'
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.9' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'com.google.protobuf' version '0.8.18' apply false
    id 'com.google.cloud.tools.jib' version '3.2.1' apply false
    id 'nu.studer.jooq' version '7.1.1' apply false
    id 'com.github.johnrengelman.shadow' version '7.1.2' apply false
    id 'io.freefair.lombok' version '6.5.0.2' apply false
}

ext {
    ver = [
            springCloud         : '2021.0.3',
            dbsetup             : '2.1.0',
            moneta              : '1.4.2',
            jacksonDatatypeMoney: '1.3.0',
            lombok              : '1.18.24',
            guava               : '31.1-jre',
            assertjDb           : '2.0.2',
            commonsValidator    : '1.7',
            commonsIo           : '2.11.0',
            shedlock            : '4.38.0',
            simpleJavaMail      : '6.7.6',
            testcontainers      : '1.17.5',
            postgresql          : '42.3.6',
            grpc                : '1.46.0',
            reactiveGrpc        : '1.2.3',
            protobuf            : '3.21.1',
            grpcSpringBoot      : '2.13.1.RELEASE',
            keycloak            : '18.0.2',
            kafkaProtobuf       : '2.2.0',
            jooq                : '3.16.8',
            liquibaseSlf4j      : '4.1.0',
            grpcTest            : '1.2.1',
            jakartaXmlBind      : '3.0.1',
            r2dbc               : '0.9.1.RELEASE',
            reactor             : '2020.0.23',
            kafkaJunit          : '3.2.1',
            awaitility          : '4.2.0'
    ]

    database = [
            driver  : 'org.testcontainers.jdbc.ContainerDatabaseDriver',
            url     : 'jdbc:tc:postgresql:13.8-alpine:///databasename?TC_INITFUNCTION=com.github.galleog.liquibase.tc.LiquibaseUpdater::update',
            username: 'test',
            password: 'test'
    ]

    grpcHealthProbeImage = 'galleog/grpc-health-probe:openjdk-11-0.4.12'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'idea'

    group = 'com.github.galleog.piggymetrics'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs = ['-Xlint:none']
    }

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${ver.springCloud}"
            mavenBom "io.projectreactor:reactor-bom:${ver.reactor}"
            mavenBom "org.keycloak.bom:keycloak-spi-bom:${ver.keycloak}"
            mavenBom "io.grpc:grpc-bom:${ver.grpc}"
            mavenBom "com.google.protobuf:protobuf-bom:${ver.protobuf}"
            mavenBom "org.testcontainers:testcontainers-bom:${ver.testcontainers}"
        }

        dependencies {
            dependency "com.salesforce.servicelibs:reactor-grpc-stub:${ver.reactiveGrpc}"
            dependency "com.ninja-squad:DbSetup:${ver.dbsetup}"
            dependency "org.javamoney:moneta:${ver.moneta}"
            dependency "org.zalando:jackson-datatype-money:${ver.jacksonDatatypeMoney}"
            dependency "com.google.guava:guava:${ver.guava}"
            dependency "org.assertj:assertj-db:${ver.assertjDb}"
            dependency "commons-validator:commons-validator:${ver.commonsValidator}"
            dependency "commons-io:commons-io:${ver.commonsIo}"
            dependency "net.javacrumbs.shedlock:shedlock-spring:${ver.shedlock}"
            dependency "net.javacrumbs.shedlock:shedlock-provider-r2dbc:${ver.shedlock}"
            dependency "org.simplejavamail:simple-java-mail:${ver.simpleJavaMail}"
            dependency "org.postgresql:postgresql:${ver.postgresql}"
            dependency "net.devh:grpc-spring-boot-starter:${ver.grpcSpringBoot}"
            dependency "net.devh:grpc-server-spring-boot-starter:${ver.grpcSpringBoot}"
            dependency "net.devh:grpc-client-spring-boot-starter:${ver.grpcSpringBoot}"
            dependency "org.keycloak:keycloak-server-spi-private:${ver.keycloak}"
            dependency "com.github.daniel-shuy:kafka-protobuf-serde:${ver.kafkaProtobuf}"
            dependency "com.mattbertolini:liquibase-slf4j:${ver.liquibaseSlf4j}"
            dependency "com.asarkar.grpc:grpc-test:${ver.grpcTest}"
            dependency "jakarta.xml.bind:jakarta.xml.bind-api:${ver.jakartaXmlBind}"
            dependency "org.jooq:jooq:${ver.jooq}"
            dependency "io.r2dbc:r2dbc-spi:${ver.r2dbc}"
            dependency "io.r2dbc:r2dbc-pool:${ver.r2dbc}"
            dependency "org.postgresql:r2dbc-postgresql:${ver.r2dbc}"
            dependency "net.mguenther.kafka:kafka-junit:${ver.kafkaJunit}"
            dependency "org.awaitility:awaitility:${ver.awaitility}"
        }
    }


    lombok {
        version = "${ver.lombok}"
    }

    test {
        useJUnitPlatform()
    }
}

task aggregateJacocoReport(type: JacocoReport) {
    dependsOn {
        subprojects*.test
    }

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each { subproject ->
        classDirectories.from(subproject.sourceSets.main.output.collect {
            fileTree(dir: it, excludes: ['**/grpc/**', '**/liquibase/tc/**'])
        })
    }

    reports {
        xml.required = true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.required = false
        csv.required = false
    }
}